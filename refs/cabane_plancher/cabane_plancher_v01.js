// Generated by Parametrix

const { polygon } = require('@jscad/modeling').primitives;
//const { subtract } = require('@jscad/modeling').booleans;
//const { union, intersect, scission, subtract } = require('@jscad/modeling').booleans;
const { union, intersect, subtract } = require('@jscad/modeling').booleans;
const { extrudeLinear, extrudeRotate } = require('@jscad/modeling').extrusions;
const { translate, rotate } = require('@jscad/modeling').transforms;

const main = () => {

const ctr_face_fig_cabane_plancher_facePlancherTop_Fa000_Ctr000 = polygon({ points: [ [ 0.0000, 0.0000 ],
	[ 800.6000, 0.0000 ],
	[ 800.6000, 200.0000 ],
	[ 0.0000, 200.0000 ],
	[ 0.0000, 0.0000 ] ] });

face_fig_cabane_plancher_facePlancherTop_Fa000 = ctr_face_fig_cabane_plancher_facePlancherTop_Fa000_Ctr000;
const ctr_face_fig_cabane_plancher_facePlancherTop_Fa001_Ctr000 = polygon({ points: [ [ 0.0000, 200.2000 ],
	[ 800.6000, 200.2000 ],
	[ 800.6000, 400.2000 ],
	[ 0.0000, 400.2000 ],
	[ 0.0000, 200.2000 ] ] });

face_fig_cabane_plancher_facePlancherTop_Fa001 = ctr_face_fig_cabane_plancher_facePlancherTop_Fa001_Ctr000;
const ctr_face_fig_cabane_plancher_facePlancherTop_Fa002_Ctr000 = polygon({ points: [ [ 0.0000, 400.4000 ],
	[ 800.6000, 400.4000 ],
	[ 800.6000, 600.4000 ],
	[ 0.0000, 600.4000 ],
	[ 0.0000, 400.4000 ] ] });

face_fig_cabane_plancher_facePlancherTop_Fa002 = ctr_face_fig_cabane_plancher_facePlancherTop_Fa002_Ctr000;
const ctr_face_fig_cabane_plancher_facePlancherTop_Fa003_Ctr000 = polygon({ points: [ [ 0.0000, 600.6000 ],
	[ 800.6000, 600.6000 ],
	[ 800.6000, 800.6000 ],
	[ 0.0000, 800.6000 ],
	[ 0.0000, 600.6000 ] ] });

face_fig_cabane_plancher_facePlancherTop_Fa003 = ctr_face_fig_cabane_plancher_facePlancherTop_Fa003_Ctr000;
const ctr_face_fig_cabane_plancher_facePlancherTop_Fa004_Ctr000 = polygon({ points: [ [ 0.0000, 800.8000 ],
	[ 800.6000, 800.8000 ],
	[ 800.6000, 1000.8000 ],
	[ 0.0000, 1000.8000 ],
	[ 0.0000, 800.8000 ] ] });

face_fig_cabane_plancher_facePlancherTop_Fa004 = ctr_face_fig_cabane_plancher_facePlancherTop_Fa004_Ctr000;
const ctr_face_fig_cabane_plancher_facePlancherTop_Fa005_Ctr000 = polygon({ points: [ [ 0.0000, 1001.0000 ],
	[ 800.6000, 1001.0000 ],
	[ 800.6000, 1201.0000 ],
	[ 0.0000, 1201.0000 ],
	[ 0.0000, 1001.0000 ] ] });

face_fig_cabane_plancher_facePlancherTop_Fa005 = ctr_face_fig_cabane_plancher_facePlancherTop_Fa005_Ctr000;
const ctr_face_fig_cabane_plancher_facePlancherTop_Fa006_Ctr000 = polygon({ points: [ [ 0.0000, 1201.2000 ],
	[ 800.6000, 1201.2000 ],
	[ 800.6000, 1401.2000 ],
	[ 0.0000, 1401.2000 ],
	[ 0.0000, 1201.2000 ] ] });

face_fig_cabane_plancher_facePlancherTop_Fa006 = ctr_face_fig_cabane_plancher_facePlancherTop_Fa006_Ctr000;
fig_cabane_plancher_facePlancherTop = union( face_fig_cabane_plancher_facePlancherTop_Fa000, face_fig_cabane_plancher_facePlancherTop_Fa001, face_fig_cabane_plancher_facePlancherTop_Fa002, face_fig_cabane_plancher_facePlancherTop_Fa003, face_fig_cabane_plancher_facePlancherTop_Fa004, face_fig_cabane_plancher_facePlancherTop_Fa005, face_fig_cabane_plancher_facePlancherTop_Fa006 );
const ctr_face_fig_cabane_plancher_facePlancherBottom_Fa000_Ctr000 = polygon({ points: [ [ 0.0000, 0.0000 ],
	[ 200.0000, 0.0000 ],
	[ 200.0000, 1401.2000 ],
	[ 0.0000, 1401.2000 ],
	[ 0.0000, 0.0000 ] ] });

face_fig_cabane_plancher_facePlancherBottom_Fa000 = ctr_face_fig_cabane_plancher_facePlancherBottom_Fa000_Ctr000;
const ctr_face_fig_cabane_plancher_facePlancherBottom_Fa001_Ctr000 = polygon({ points: [ [ 200.2000, 0.0000 ],
	[ 400.2000, 0.0000 ],
	[ 400.2000, 1401.2000 ],
	[ 200.2000, 1401.2000 ],
	[ 200.2000, 0.0000 ] ] });

face_fig_cabane_plancher_facePlancherBottom_Fa001 = ctr_face_fig_cabane_plancher_facePlancherBottom_Fa001_Ctr000;
const ctr_face_fig_cabane_plancher_facePlancherBottom_Fa002_Ctr000 = polygon({ points: [ [ 400.4000, 0.0000 ],
	[ 600.4000, 0.0000 ],
	[ 600.4000, 1401.2000 ],
	[ 400.4000, 1401.2000 ],
	[ 400.4000, 0.0000 ] ] });

face_fig_cabane_plancher_facePlancherBottom_Fa002 = ctr_face_fig_cabane_plancher_facePlancherBottom_Fa002_Ctr000;
const ctr_face_fig_cabane_plancher_facePlancherBottom_Fa003_Ctr000 = polygon({ points: [ [ 600.6000, 0.0000 ],
	[ 800.6000, 0.0000 ],
	[ 800.6000, 1401.2000 ],
	[ 600.6000, 1401.2000 ],
	[ 600.6000, 0.0000 ] ] });

face_fig_cabane_plancher_facePlancherBottom_Fa003 = ctr_face_fig_cabane_plancher_facePlancherBottom_Fa003_Ctr000;
fig_cabane_plancher_facePlancherBottom = union( face_fig_cabane_plancher_facePlancherBottom_Fa000, face_fig_cabane_plancher_facePlancherBottom_Fa001, face_fig_cabane_plancher_facePlancherBottom_Fa002, face_fig_cabane_plancher_facePlancherBottom_Fa003 );
const ctr_face_fig_cabane_plancher_faceBeam_Fa000_Ctr000 = polygon({ points: [ [ 200.0000, 800.0000 ],
	[ 350.0000, 800.0000 ],
	[ 350.0000, 675.9808 ],
	[ 335.0000, 650.0000 ],
	[ 200.0000, 650.0000 ],
	[ 200.0000, 800.0000 ] ] });

face_fig_cabane_plancher_faceBeam_Fa000 = ctr_face_fig_cabane_plancher_faceBeam_Fa000_Ctr000;
const ctr_face_fig_cabane_plancher_faceBeam_Fa001_Ctr000 = polygon({ points: [ [ 1201.2000, 800.0000 ],
	[ 1051.2000, 800.0000 ],
	[ 1051.2000, 675.9808 ],
	[ 1066.2000, 650.0000 ],
	[ 1201.2000, 650.0000 ],
	[ 1201.2000, 800.0000 ] ] });

face_fig_cabane_plancher_faceBeam_Fa001 = ctr_face_fig_cabane_plancher_faceBeam_Fa001_Ctr000;
fig_cabane_plancher_faceBeam = union( face_fig_cabane_plancher_faceBeam_Fa000, face_fig_cabane_plancher_faceBeam_Fa001 );
const ctr_face_fig_cabane_plancher_faceLeg_Fa000_Ctr000 = polygon({ points: [ [ 594.8076, 800.0000 ],
	[ 421.6025, 800.0000 ],
	[ -40.2777, 0.0000 ],
	[ 132.9274, 0.0000 ],
	[ 594.8076, 800.0000 ] ] });

face_fig_cabane_plancher_faceLeg_Fa000 = ctr_face_fig_cabane_plancher_faceLeg_Fa000_Ctr000;
const ctr_face_fig_cabane_plancher_faceLeg_Fa001_Ctr000 = polygon({ points: [ [ 806.3924, 800.0000 ],
	[ 979.5975, 800.0000 ],
	[ 1441.4777, 0.0000 ],
	[ 1268.2726, 0.0000 ],
	[ 806.3924, 800.0000 ] ] });

face_fig_cabane_plancher_faceLeg_Fa001 = ctr_face_fig_cabane_plancher_faceLeg_Fa001_Ctr000;
fig_cabane_plancher_faceLeg = union( face_fig_cabane_plancher_faceLeg_Fa000, face_fig_cabane_plancher_faceLeg_Fa001 );
const ctr_face_fig_cabane_plancher_faceButtress_Fa000_Ctr000 = polygon({ points: [ [ 594.8076, 800.0000 ],
	[ 806.3924, 800.0000 ],
	[ 892.9949, 650.0000 ],
	[ 508.2051, 650.0000 ],
	[ 594.8076, 800.0000 ] ] });

face_fig_cabane_plancher_faceButtress_Fa000 = ctr_face_fig_cabane_plancher_faceButtress_Fa000_Ctr000;
fig_cabane_plancher_faceButtress = face_fig_cabane_plancher_faceButtress_Fa000;
const ctr_face_fig_cabane_plancher_faceSide_Fa000_Ctr000 = polygon({ points: [ [ 200.0000, 0.0000 ],
	[ 300.0000, 0.0000 ],
	[ 300.0000, 800.0000 ],
	[ 200.0000, 800.0000 ],
	[ 200.0000, 0.0000 ] ] });

face_fig_cabane_plancher_faceSide_Fa000 = ctr_face_fig_cabane_plancher_faceSide_Fa000_Ctr000;
const ctr_face_fig_cabane_plancher_faceSide_Fa001_Ctr000 = polygon({ points: [ [ 500.6000, 0.0000 ],
	[ 600.6000, 0.0000 ],
	[ 600.6000, 800.0000 ],
	[ 500.6000, 800.0000 ],
	[ 500.6000, 0.0000 ] ] });

face_fig_cabane_plancher_faceSide_Fa001 = ctr_face_fig_cabane_plancher_faceSide_Fa001_Ctr000;
fig_cabane_plancher_faceSide = union( face_fig_cabane_plancher_faceSide_Fa000, face_fig_cabane_plancher_faceSide_Fa001 );

const subpax_cabane_plancher_plancherTop =
	translate( [ 0, 0, 820, ],
		rotate( [ 0, 0, 0, ],
			   extrudeLinear( {height: 20}, fig_cabane_plancher_facePlancherTop )
		)
	);


const subpax_cabane_plancher_plancherBottom =
	translate( [ 0, 0, 800, ],
		rotate( [ 0, 0, 0, ],
			   extrudeLinear( {height: 20}, fig_cabane_plancher_facePlancherBottom )
		)
	);


const subpax_cabane_plancher_beam =
	translate( [ 800.6, 1401.2, 0, ],
		rotate( [ 1.5707963267948966, 0, -1.5707963267948966, ],
			   extrudeLinear( {height: 800.6}, fig_cabane_plancher_faceBeam )
		)
	);


const subpax_cabane_plancher_leg1 =
	translate( [ 300, 1401.2, 0, ],
		rotate( [ 1.5707963267948966, 0, -1.5707963267948966, ],
			   extrudeLinear( {height: 100}, fig_cabane_plancher_faceLeg )
		)
	);


const subpax_cabane_plancher_leg2 =
	translate( [ 600.6, 1401.2, 0, ],
		rotate( [ 1.5707963267948966, 0, -1.5707963267948966, ],
			   extrudeLinear( {height: 100}, fig_cabane_plancher_faceLeg )
		)
	);


const subpax_cabane_plancher_buttress1 =
	translate( [ 300, 1401.2, 0, ],
		rotate( [ 1.5707963267948966, 0, -1.5707963267948966, ],
			   extrudeLinear( {height: 100}, fig_cabane_plancher_faceButtress )
		)
	);


const subpax_cabane_plancher_buttress2 =
	translate( [ 600.6, 1401.2, 0, ],
		rotate( [ 1.5707963267948966, 0, -1.5707963267948966, ],
			   extrudeLinear( {height: 100}, fig_cabane_plancher_faceButtress )
		)
	);

const pax_cabane_plancher = union( subpax_cabane_plancher_plancherTop, subpax_cabane_plancher_plancherBottom, subpax_cabane_plancher_beam, subpax_cabane_plancher_leg1, subpax_cabane_plancher_leg2, subpax_cabane_plancher_buttress1, subpax_cabane_plancher_buttress2 );

return pax_cabane_plancher;
}
module.exports = { main };
